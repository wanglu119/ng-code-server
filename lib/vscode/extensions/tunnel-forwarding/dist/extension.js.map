{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://tunnel-forwarding/./src/deferredPromise.ts","webpack://tunnel-forwarding/./src/split.ts","webpack://tunnel-forwarding/external commonjs \"vscode\"","webpack://tunnel-forwarding/external node-commonjs \"child_process\"","webpack://tunnel-forwarding/external node-commonjs \"path\"","webpack://tunnel-forwarding/external node-commonjs \"stream\"","webpack://tunnel-forwarding/webpack/bootstrap","webpack://tunnel-forwarding/./src/extension.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Copied from src\\vs\\base\\common\\async.ts\n */\nexport class $a<T> {\n\n\tprivate a!: ValueCallback<T>;\n\tprivate b!: (err: unknown) => void;\n\tprivate d?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.d?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.d?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.d;\n\t}\n\n\tpublic get value() {\n\t\treturn this.d?.outcome === DeferredOutcome.Resolved ? this.d?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.a = c;\n\t\t\tthis.b = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.a(value);\n\t\t\tthis.d = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.b(err);\n\t\t\tthis.d = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Transform } from 'stream';\n\nexport const $b = () => new $c('\\n'.charCodeAt(0));\n\n/**\n * Copied and simplified from src\\vs\\base\\node\\nodeStreams.ts\n *\n * Exception: does not include the split character in the output.\n */\nexport class $c extends Transform {\n\tprivate a: Buffer | undefined;\n\n\tconstructor(private readonly b: number) {\n\t\tsuper();\n\t}\n\n\toverride _transform(chunk: Buffer, _encoding: string, callback: (error?: Error | null, data?: any) => void): void {\n\t\tif (!this.a) {\n\t\t\tthis.a = chunk;\n\t\t} else {\n\t\t\tthis.a = Buffer.concat([this.a, chunk]);\n\t\t}\n\n\t\tlet offset = 0;\n\t\twhile (offset < this.a.length) {\n\t\t\tconst index = this.a.indexOf(this.b, offset);\n\t\t\tif (index === -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.push(this.a.subarray(offset, index));\n\t\t\toffset = index + 1;\n\t\t}\n\n\t\tthis.a = offset === this.a.length ? undefined : this.a.subarray(offset);\n\t\tcallback();\n\t}\n\n\toverride _flush(callback: (error?: Error | null, data?: any) => void): void {\n\t\tif (this.a) {\n\t\t\tthis.push(this.a);\n\t\t}\n\n\t\tcallback();\n\t}\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcessWithoutNullStreams, spawn } from 'child_process';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\nimport { $a } from './deferredPromise';\nimport { $b } from './split';\n\nexport const enum TunnelPrivacyId {\n\tPrivate = 'private',\n\tPublic = 'public',\n}\n\n/**\n * Timeout after the last port forwarding is disposed before we'll tear down\n * the CLI. This is primarily used since privacy changes to port will appear\n * as a dispose+re-create call, and we don't want to have to restart the CLI.\n */\nconst CLEANUP_TIMEOUT = 10_000;\n\nconst cliPath = process.env.VSCODE_FORWARDING_IS_DEV\n\t? path.join(__dirname, '../../../cli/target/debug/code')\n\t: path.join(\n\t\tvscode.env.appRoot,\n\t\tprocess.platform === 'darwin' ? 'bin' : '../../bin',\n\t\tvscode.env.appQuality === 'stable' ? 'code-tunnel' : 'code-tunnel-insiders',\n\t) + (process.platform === 'win32' ? '.exe' : '');\n\nclass Tunnel implements vscode.Tunnel {\n\tprivate readonly a = new vscode.EventEmitter<void>();\n\tpublic readonly onDidDispose = this.a.event;\n\tpublic localAddress!: string;\n\n\tconstructor(\n\t\tpublic readonly remoteAddress: { port: number; host: string },\n\t\tpublic readonly privacy: TunnelPrivacyId,\n\t) { }\n\n\tpublic setPortFormat(formatString: string) {\n\t\tthis.localAddress = formatString.replace('{port}', String(this.remoteAddress.port));\n\t}\n\n\tdispose() {\n\t\tthis.a.fire();\n\t}\n}\n\nconst enum State {\n\tStarting,\n\tActive,\n\tInactive,\n\tError,\n}\n\ntype StateT =\n\t| { state: State.Inactive }\n\t| { state: State.Starting; process: ChildProcessWithoutNullStreams; cleanupTimeout?: NodeJS.Timeout }\n\t| { state: State.Active; portFormat: string; process: ChildProcessWithoutNullStreams; cleanupTimeout?: NodeJS.Timeout }\n\t| { state: State.Error; error: string };\n\nexport async function activate(context: vscode.ExtensionContext) {\n\tif (vscode.env.remoteAuthority) {\n\t\treturn; // forwarding is local-only at the moment\n\t}\n\n\tconst logger = new Logger(vscode.l10n.t('Port Forwarding'));\n\tconst provider = new TunnelProvider(logger, context);\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('tunnel-forwarding.showLog', () => logger.show()),\n\t\tvscode.commands.registerCommand('tunnel-forwarding.restart', () => provider.restart()),\n\n\t\tprovider.onDidStateChange(s => {\n\t\t\tvscode.commands.executeCommand('setContext', 'tunnelForwardingIsRunning', s.state !== State.Inactive);\n\t\t}),\n\n\t\tawait vscode.workspace.registerTunnelProvider(\n\t\t\tprovider,\n\t\t\t{\n\t\t\t\ttunnelFeatures: {\n\t\t\t\t\televation: false,\n\t\t\t\t\tprivacyOptions: [\n\t\t\t\t\t\t{ themeIcon: 'globe', id: TunnelPrivacyId.Public, label: vscode.l10n.t('Public') },\n\t\t\t\t\t\t{ themeIcon: 'lock', id: TunnelPrivacyId.Private, label: vscode.l10n.t('Private') },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t),\n\t);\n}\n\nexport function deactivate() { }\n\nclass Logger {\n\tprivate a?: vscode.LogOutputChannel;\n\n\tconstructor(private readonly b: string) { }\n\n\tpublic show(): void {\n\t\treturn this.a?.show();\n\t}\n\n\tpublic clear() {\n\t\tthis.a?.clear();\n\t}\n\n\tpublic log(\n\t\tlogLevel: 'trace' | 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\t...args: unknown[]\n\t) {\n\t\tif (!this.a) {\n\t\t\tthis.a = vscode.window.createOutputChannel(this.b, { log: true });\n\t\t\tvscode.commands.executeCommand('setContext', 'tunnelForwardingHasLog', true);\n\t\t}\n\t\tthis.a[logLevel](message, ...args);\n\t}\n}\n\nconst didWarnPublicKey = 'didWarnPublic';\n\nclass TunnelProvider implements vscode.TunnelProvider {\n\tprivate readonly a = new Set<Tunnel>();\n\tprivate readonly b = new vscode.EventEmitter<StateT>();\n\tprivate c: StateT = { state: State.Inactive };\n\n\tprivate get d(): StateT {\n\t\treturn this.c;\n\t}\n\n\tprivate set d(state: StateT) {\n\t\tthis.c = state;\n\t\tthis.b.fire(state);\n\t}\n\n\tpublic readonly onDidStateChange = this.b.event;\n\n\tconstructor(private readonly f: Logger, private readonly g: vscode.ExtensionContext) { }\n\n\t/** @inheritdoc */\n\tpublic async provideTunnel(tunnelOptions: vscode.TunnelOptions): Promise<vscode.Tunnel | undefined> {\n\t\tif (tunnelOptions.privacy === TunnelPrivacyId.Public) {\n\t\t\tif (!(await this.h(tunnelOptions.remoteAddress.port))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst tunnel = new Tunnel(\n\t\t\ttunnelOptions.remoteAddress,\n\t\t\t(tunnelOptions.privacy as TunnelPrivacyId) || TunnelPrivacyId.Private,\n\t\t);\n\n\t\tthis.a.add(tunnel);\n\t\ttunnel.onDidDispose(() => {\n\t\t\tthis.a.delete(tunnel);\n\t\t\tthis.k();\n\t\t});\n\n\t\tswitch (this.d.state) {\n\t\t\tcase State.Error:\n\t\t\tcase State.Inactive:\n\t\t\t\tawait this.m();\n\t\t\t// fall through since state is now starting\n\t\t\tcase State.Starting:\n\t\t\t\tthis.k();\n\t\t\t\treturn new Promise<Tunnel>((resolve, reject) => {\n\t\t\t\t\tconst l = this.b.event(state => {\n\t\t\t\t\t\tif (state.state === State.Active) {\n\t\t\t\t\t\t\ttunnel.setPortFormat(state.portFormat);\n\t\t\t\t\t\t\tl.dispose();\n\t\t\t\t\t\t\tresolve(tunnel);\n\t\t\t\t\t\t} else if (state.state === State.Error) {\n\t\t\t\t\t\t\tl.dispose();\n\t\t\t\t\t\t\treject(new Error(state.error));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase State.Active:\n\t\t\t\ttunnel.setPortFormat(this.d.portFormat);\n\t\t\t\tthis.k();\n\t\t\t\treturn tunnel;\n\t\t}\n\t}\n\n\t/** Re/starts the port forwarding system. */\n\tpublic async restart() {\n\t\tthis.j();\n\t\tawait this.m(); // will show progress\n\t\tthis.k();\n\t}\n\n\tprivate async h(portNumber: number) {\n\t\tconst didWarn = this.g.globalState.get(didWarnPublicKey, false);\n\t\tif (didWarn) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst continueOpt = vscode.l10n.t('Continue');\n\t\tconst dontShowAgain = vscode.l10n.t(\"Don't show again\");\n\t\tconst r = await vscode.window.showWarningMessage(\n\t\t\tvscode.l10n.t(\"You're about to create a publicly forwarded port. Anyone on the internet will be able to connect to the service listening on port {0}. You should only proceed if this service is secure and non-sensitive.\", portNumber),\n\t\t\t{ modal: true },\n\t\t\tcontinueOpt,\n\t\t\tdontShowAgain,\n\t\t);\n\t\tif (r === continueOpt) {\n\t\t\t// continue\n\t\t} else if (r === dontShowAgain) {\n\t\t\tawait this.g.globalState.update(didWarnPublicKey, true);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate i(process: ChildProcessWithoutNullStreams) {\n\t\treturn (\n\t\t\t(this.d.state === State.Starting || this.d.state === State.Active) &&\n\t\t\tthis.d.process === process\n\t\t);\n\t}\n\n\tprivate j() {\n\t\tif (this.d.state === State.Starting || this.d.state === State.Active) {\n\t\t\tthis.f.log('info', '[forwarding] no more ports, stopping forwarding CLI');\n\t\t\tthis.d.process.kill();\n\t\t\tthis.d = { state: State.Inactive };\n\t\t}\n\t}\n\n\tprivate k() {\n\t\tif (this.d.state !== State.Starting && this.d.state !== State.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ports = [...this.a].map(t => ({ number: t.remoteAddress.port, privacy: t.privacy }));\n\t\tthis.d.process.stdin.write(`${JSON.stringify(ports)}\\n`);\n\n\t\tif (ports.length === 0 && !this.d.cleanupTimeout) {\n\t\t\tthis.d.cleanupTimeout = setTimeout(() => this.j(), CLEANUP_TIMEOUT);\n\t\t} else if (ports.length > 0 && this.d.cleanupTimeout) {\n\t\t\tclearTimeout(this.d.cleanupTimeout);\n\t\t\tthis.d.cleanupTimeout = undefined;\n\t\t}\n\t}\n\n\tprivate async m() {\n\t\tconst session = await vscode.authentication.getSession('github', ['user:email', 'read:org'], {\n\t\t\tcreateIfNone: true,\n\t\t});\n\n\t\tconst args = [\n\t\t\t'--verbose',\n\t\t\t'tunnel',\n\t\t\t'forward-internal',\n\t\t\t'--provider',\n\t\t\t'github',\n\t\t\t'--access-token',\n\t\t\tsession.accessToken,\n\t\t];\n\n\t\tthis.f.log('info', '[forwarding] starting CLI');\n\t\tconst child = spawn(cliPath, args, { stdio: 'pipe', env: { ...process.env, NO_COLOR: '1' } });\n\t\tthis.d = { state: State.Starting, process: child };\n\n\t\tconst progressP = new $a<void>();\n\t\tvscode.window.withProgress(\n\t\t\t{\n\t\t\t\tlocation: vscode.ProgressLocation.Notification,\n\t\t\t\ttitle: vscode.l10n.t({\n\t\t\t\t\tcomment: ['do not change link format [Show Log](command), only change the text \"Show Log\"'],\n\t\t\t\t\tmessage: 'Starting port forwarding system ([Show Log]({0}))',\n\t\t\t\t\targs: ['command:tunnel-forwarding.showLog']\n\t\t\t\t}),\n\t\t\t},\n\t\t\t() => progressP.p,\n\t\t);\n\n\t\tlet lastPortFormat: string | undefined;\n\t\tchild.on('exit', status => {\n\t\t\tconst msg = `[forwarding] exited with code ${status}`;\n\t\t\tthis.f.log('info', msg);\n\t\t\tprogressP.complete(); // make sure to clear progress on unexpected exit\n\t\t\tif (this.i(child)) {\n\t\t\t\tthis.d = { state: State.Error, error: msg };\n\t\t\t}\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tthis.f.log('error', `[forwarding] ${err}`);\n\t\t\tprogressP.complete(); // make sure to clear progress on unexpected exit\n\t\t\tif (this.i(child)) {\n\t\t\t\tthis.d = { state: State.Error, error: String(err) };\n\t\t\t}\n\t\t});\n\n\t\tchild.stdout\n\t\t\t.pipe($b())\n\t\t\t.on('data', line => this.f.log('info', `[forwarding] ${line}`))\n\t\t\t.resume();\n\n\t\tchild.stderr\n\t\t\t.pipe($b())\n\t\t\t.on('data', line => {\n\t\t\t\ttry {\n\t\t\t\t\tconst l: { port_format: string } = JSON.parse(line);\n\t\t\t\t\tif (l.port_format && l.port_format !== lastPortFormat) {\n\t\t\t\t\t\tthis.d = {\n\t\t\t\t\t\t\tstate: State.Active,\n\t\t\t\t\t\t\tportFormat: l.port_format, process: child,\n\t\t\t\t\t\t\tcleanupTimeout: 'cleanupTimeout' in this.d ? this.d.cleanupTimeout : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tprogressP.complete();\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.f.log('error', `[forwarding] ${line}`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.resume();\n\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tchild.on('spawn', resolve);\n\t\t\tchild.on('error', reject);\n\t\t});\n\t}\n}\n"],"names":["this","d","outcome","value","undefined","constructor","p","Promise","c","e","a","b","complete","resolve","error","err","$b","$c","charCodeAt","Transform","super","_transform","chunk","_encoding","callback","Buffer","concat","offset","length","index","indexOf","push","subarray","_flush","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","cliPath","process","env","VSCODE_FORWARDING_IS_DEV","path","join","__dirname","vscode","appRoot","platform","appQuality","Tunnel","remoteAddress","privacy","EventEmitter","onDidDispose","event","setPortFormat","formatString","localAddress","replace","String","port","dispose","fire","async","context","remoteAuthority","logger","Logger","l10n","t","provider","TunnelProvider","subscriptions","commands","registerCommand","show","restart","onDidStateChange","s","executeCommand","state","workspace","registerTunnelProvider","tunnelFeatures","elevation","privacyOptions","themeIcon","id","label","clear","log","logLevel","message","args","window","createOutputChannel","didWarnPublicKey","f","g","Set","tunnelOptions","h","tunnel","add","delete","k","m","reject","l","portFormat","Error","j","portNumber","globalState","get","continueOpt","dontShowAgain","r","showWarningMessage","modal","update","i","kill","ports","map","number","stdin","write","JSON","stringify","cleanupTimeout","clearTimeout","setTimeout","authentication","getSession","createIfNone","accessToken","child","spawn","stdio","NO_COLOR","progressP","$a","withProgress","location","ProgressLocation","Notification","title","comment","on","status","msg","stdout","pipe","line","resume","stderr","parse","port_format","lastPortFormat"],"sourceRoot":""}