{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://references-view/./src/calls/index.ts","webpack://references-view/./src/calls/model.ts","webpack://references-view/./src/highlights.ts","webpack://references-view/./src/navigation.ts","webpack://references-view/./src/references/index.ts","webpack://references-view/./src/references/model.ts","webpack://references-view/./src/tree.ts","webpack://references-view/./src/types/index.ts","webpack://references-view/./src/types/model.ts","webpack://references-view/./src/utils.ts","webpack://references-view/external commonjs \"vscode\"","webpack://references-view/webpack/bootstrap","webpack://references-view/./src/extension.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { $k } from '../tree';\nimport { $g } from '../utils';\nimport { $m, CallsDirection, $l } from './model';\n\nexport function $n(tree: $k, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new $l(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: $m | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: $l | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof $m) {\n\t\t\tnewInput = new $l(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof $l) {\n\t\t\tnewInput = new $l(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: $m | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: $m | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: $m | unknown): void {\n\tif (item instanceof $m) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static a = 'references-view.callHierarchyMode';\n\n\tprivate b = new $g<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate c: vscode.Memento,\n\t\tprivate d: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = c.get<number>(RichCallsDirection.a);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = d;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this.d;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis.d = value;\n\t\tthis.b.set(this.d === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis.c.update(RichCallsDirection.a, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { $d, $b, $i, $c } from '../utils';\n\nexport class $l implements SymbolTreeInput<$m> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? vscode.l10n.t('Callers Of')\n\t\t\t: vscode.l10n.t('Calls From');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): $l {\n\t\treturn new $l(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class $m {\n\n\tchildren?: $m[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: $m | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<$m>, SymbolItemEditorHighlights<$m>, SymbolItemDragAndDrop<$m> {\n\n\treadonly roots: $m[] = [];\n\n\tprivate readonly a = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this.a.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new $m(this, item, undefined, undefined));\n\t}\n\n\tprivate async b(call: $m): Promise<$m[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new $m(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new $m(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: $m): Promise<$m[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this.b(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation\n\n\tlocation(item: $m) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): $m | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: $m): $m {\n\t\treturn this.c(from, true) ?? from;\n\t}\n\n\tprevious(from: $m): $m {\n\t\treturn this.c(from, false) ?? from;\n\t}\n\n\tprivate c(item: $m, fwd: boolean): $m | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : $c(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- dnd\n\n\tgetDragUri(item: $m): vscode.Uri | undefined {\n\t\treturn $d(item.item.uri, item.item.range);\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: $m, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: $m) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\t$b(siblings, item);\n\t\t\tthis.a.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<$m> {\n\n\tprivate readonly a = new vscode.EventEmitter<$m | undefined>();\n\treadonly onDidChangeTreeData = this.a.event;\n\n\tprivate readonly b: vscode.Disposable;\n\n\tconstructor(private c: CallsModel) {\n\t\tthis.b = c.onDidChange(e => this.a.fire(e instanceof $m ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t}\n\n\tgetTreeItem(element: $m): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.tooltip = item.label && element.item.detail ? `${item.label} - ${element.item.detail}` : item.label ? `${item.label}` : element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = $i(element.item.kind);\n\n\t\ttype OpenArgs = [vscode.Uri, vscode.TextDocumentShowOptions];\n\t\tlet openArgs: OpenArgs;\n\n\t\tif (element.model.direction === CallsDirection.Outgoing) {\n\n\t\t\topenArgs = [element.item.uri, { selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }];\n\n\t\t} else {\n\t\t\t// incoming call -> reveal first call instead of caller\n\t\t\tlet firstLoctionStart: vscode.Position | undefined;\n\t\t\tif (element.locations) {\n\t\t\t\tfor (const loc of element.locations) {\n\t\t\t\t\tif (loc.uri.toString() === element.item.uri.toString()) {\n\t\t\t\t\t\tfirstLoctionStart = firstLoctionStart?.isBefore(loc.range.start) ? firstLoctionStart : loc.range.start;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!firstLoctionStart) {\n\t\t\t\tfirstLoctionStart = element.item.selectionRange.start;\n\t\t\t}\n\t\t\topenArgs = [element.item.uri, { selection: new vscode.Range(firstLoctionStart, firstLoctionStart) }];\n\t\t}\n\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Call'),\n\t\t\targuments: openArgs\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: $m | undefined) {\n\t\treturn element\n\t\t\t? this.c.getCallChildren(element)\n\t\t\t: this.c.roots;\n\t}\n\n\tgetParent(element: $m) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class $a<T> {\n\n\tprivate readonly a = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly b: vscode.Disposable[] = [];\n\tprivate readonly c = new Set<string>();\n\n\tconstructor(private readonly d: vscode.TreeView<T>, private readonly f: SymbolItemEditorHighlights<T>) {\n\t\tthis.b.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this.c.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => d.visible && this.update()),\n\t\t\td.onDidChangeVisibility(e => e.visible ? this.g() : this.h()),\n\t\t\td.onDidChangeSelection(() => {\n\t\t\t\tif (d.visible) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.g();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.b).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this.a, []);\n\t\t}\n\t}\n\n\tprivate g(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.c.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this.d.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this.f.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this.a, ranges);\n\t\t}\n\t}\n\n\tprivate h(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this.a, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis.h();\n\t\tthis.g();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { $g } from './utils';\n\nexport class $j {\n\n\tprivate readonly a: vscode.Disposable[] = [];\n\tprivate readonly b = new $g<boolean>('references-view.canNavigate');\n\n\tprivate c?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly d: vscode.TreeView<unknown>) {\n\t\tthis.a.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this.a).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis.c = delegate;\n\t\tthis.b.set(Boolean(this.c));\n\t}\n\n\tprivate e(): undefined | unknown {\n\t\tif (!this.c) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this.d.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.c.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate f(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this.c) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this.e();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this.c.previous(item);\n\t\tconst newLocation = this.c.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis.d.reveal(newItem, { select: true, focus: true });\n\t\t\tthis.f(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this.c) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this.e();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this.c.next(item);\n\t\tconst newLocation = this.c.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis.d.reveal(newItem, { select: true, focus: true });\n\t\t\tthis.f(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { $k } from '../tree';\nimport { $q, $r, $p, $o } from './model';\n\nexport function $s(tree: $k, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new $o(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new $o(vscode.l10n.t('References'), new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t}\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: $r | $q | unknown) => {\n\tif (item instanceof $r) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof $q) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: $q | $r | unknown) {\n\tif (item instanceof $q) {\n\t\titem.remove();\n\t} else if (item instanceof $r) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: $p | $r | $q | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof $p) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof $r) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof $q) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n}\n\nasync function copyPathCommand(item: $q | unknown) {\n\tif (item instanceof $q) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput, SymbolTreeModel } from '../references-view';\nimport { $d, $b, $f, $c } from '../utils';\n\nexport class $o implements SymbolTreeInput<$q | $r> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly c: string,\n\t\tprivate readonly d?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = c;\n\t}\n\n\tasync resolve() {\n\n\t\tlet model: $p;\n\t\tif (this.d) {\n\t\t\tmodel = new $p(this.d);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this.c, this.location.uri, this.location.range.start));\n\t\t\tmodel = new $p(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\n\t\treturn <SymbolTreeModel<$q | $r>>{\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): $o {\n\t\treturn new $o(this.title, location, this.c);\n\t}\n}\n\nexport class $p implements SymbolItemNavigation<$q | $r>, SymbolItemEditorHighlights<$q | $r>, SymbolItemDragAndDrop<$q | $r> {\n\n\tprivate c = new vscode.EventEmitter<$q | $r | undefined>();\n\treadonly onDidChangeTreeData = this.c.event;\n\n\treadonly items: $q[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: $q | undefined;\n\t\tfor (const item of locations.sort($p.e)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || $p.d(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new $q(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new $r(loc, last));\n\t\t}\n\t}\n\n\tprivate static d(a: vscode.Uri, b: vscode.Uri): number {\n\t\tconst aStr = a.with({ fragment: '' }).toString();\n\t\tconst bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static e(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tconst aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tconst bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tconst bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn vscode.l10n.t('No results.');\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} file', total, files);\n\t\t} else if (total === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} files', total, files);\n\t\t} else if (files === 1) {\n\t\t\treturn vscode.l10n.t('{0} results in {1} file', total, files);\n\t\t} else {\n\t\t\treturn vscode.l10n.t('{0} results in {1} files', total, files);\n\t\t}\n\t}\n\n\tlocation(item: $q | $r) {\n\t\treturn item instanceof $r\n\t\t\t? item.location\n\t\t\t: new vscode.Location(item.uri, item.references[0]?.location.range ?? new vscode.Position(0, 0));\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): $q | $r | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: $r | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tconst bestValue = $p.f(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tconst value = $p.f(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static f(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: $q | $r): $q | $r {\n\t\treturn this.g(item, true) ?? item;\n\t}\n\n\tprevious(item: $q | $r): $q | $r {\n\t\treturn this.g(item, false) ?? item;\n\t}\n\n\tprivate g(item: $q | $r, fwd: boolean): $r | void {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: $q): $q => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof $q) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn $c(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof $r) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn $c(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: $q | $r, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: $q | $r) {\n\t\tif (item instanceof $q) {\n\t\t\t$b(this.items, item);\n\t\t\tthis.c.fire(undefined);\n\t\t} else {\n\t\t\t$b(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\t$b(this.items, item.file);\n\t\t\t\tthis.c.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis.c.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDragUri(item: $q | $r): vscode.Uri | undefined {\n\t\tif (item instanceof $q) {\n\t\t\treturn item.uri;\n\t\t} else {\n\t\t\treturn $d(item.file.uri, item.location.range);\n\t\t}\n\t}\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<$q | $r>{\n\n\tprivate readonly c: vscode.Disposable;\n\tprivate readonly d = new vscode.EventEmitter<$q | $r | undefined>();\n\n\treadonly onDidChangeTreeData = this.d.event;\n\n\tconstructor(private readonly e: $p) {\n\t\tthis.c = e.onDidChangeTreeData(() => this.d.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis.d.dispose();\n\t\tthis.c.dispose();\n\t}\n\n\tasync getTreeItem(element: $q | $r) {\n\t\tif (element instanceof $q) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = $f(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: vscode.l10n.t('Open Reference'),\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: range.with({ end: range.start }) }\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: $q | $r) {\n\t\tif (!element) {\n\t\t\treturn this.e.items;\n\t\t}\n\t\tif (element instanceof $q) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: $q | $r) {\n\t\treturn element instanceof $r ? element.file : undefined;\n\t}\n}\n\nexport class $q {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<$r>,\n\t\treadonly model: $p\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (const ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class $r {\n\n\tprivate c: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: $q,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this.c) {\n\t\t\tthis.c = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof $q && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof $r) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this.c;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tconst doc = await this.getDocument();\n\t\tconst chunks = $f(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { $a } from './highlights';\nimport { $j } from './navigation';\nimport { SymbolItemDragAndDrop, SymbolTreeInput } from './references-view';\nimport { $g, $e, $h } from './utils';\n\n\nexport class $k {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly a = new $g<boolean>('reference-list.isActive');\n\tprivate readonly b = new $g<boolean>('reference-list.hasResult');\n\tprivate readonly c = new $g<string>('reference-list.source');\n\n\tprivate readonly d = new TreeInputHistory(this);\n\tprivate readonly e = new TreeDataProviderDelegate();\n\tprivate readonly f = new TreeDndDelegate();\n\tprivate readonly g: vscode.TreeView<unknown>;\n\tprivate readonly h: $j;\n\n\tprivate i?: SymbolTreeInput<unknown>;\n\tprivate j?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis.g = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this.e,\n\t\t\tshowCollapseAll: true,\n\t\t\tdragAndDropController: this.f\n\t\t});\n\t\tthis.h = new $j(this.g);\n\t}\n\n\tdispose(): void {\n\t\tthis.d.dispose();\n\t\tthis.g.dispose();\n\t\tthis.j?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this.i;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await $e(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.c.set(input.contextValue);\n\t\tthis.a.set(true);\n\t\tthis.b.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this.i || Object.getPrototypeOf(this.i) !== Object.getPrototypeOf(input);\n\t\tthis.i = input;\n\t\tthis.j?.dispose();\n\n\t\tthis.g.title = input.title;\n\t\tthis.g.message = newInputKind ? undefined : this.g.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis.e.update(modelPromise.then(model => model?.provider ?? this.d));\n\t\tthis.f.update(modelPromise.then(model => model?.dnd));\n\n\t\tconst model = await modelPromise;\n\t\tif (this.i !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.d.add(input);\n\t\tthis.g.message = model.message;\n\n\t\t// navigation\n\t\tthis.h.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this.g.visible) {\n\t\t\tawait this.g.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: $a<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new $a(this.g, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis.g.title = input.title;\n\t\t\t\tthis.g.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis.j = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis.j?.dispose();\n\t\tthis.i = undefined;\n\t\tthis.b.set(false);\n\t\tthis.c.reset();\n\t\tthis.g.title = vscode.l10n.t('References');\n\t\tthis.g.message = this.d.size === 0\n\t\t\t? vscode.l10n.t('No results.')\n\t\t\t: vscode.l10n.t('No results. Try running a previous search again:');\n\t\tthis.e.update(Promise.resolve(this.d));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate a?: vscode.Disposable;\n\tprivate b = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this.b.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis.a?.dispose();\n\t\tthis.a = undefined;\n\n\t\tthis.b.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis.a = value.onDidChangeTreeData(this.b.fire, this.b);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis.c();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis.c();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis.c();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate c(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- tree dnd\n\nclass TreeDndDelegate implements vscode.TreeDragAndDropController<undefined> {\n\n\tprivate a: SymbolItemDragAndDrop<undefined> | undefined;\n\n\treadonly dropMimeTypes: string[] = [];\n\n\treadonly dragMimeTypes: string[] = ['text/uri-list'];\n\n\tupdate(delegate: Promise<SymbolItemDragAndDrop<unknown> | undefined>) {\n\t\tthis.a = undefined;\n\t\tdelegate.then(value => this.a = value);\n\t}\n\n\thandleDrag(source: undefined[], data: vscode.DataTransfer) {\n\t\tif (this.a) {\n\t\t\tconst urls: string[] = [];\n\t\t\tfor (const item of source) {\n\t\t\t\tconst uri = this.a.getDragUri(item);\n\t\t\t\tif (uri) {\n\t\t\t\t\turls.push(uri.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (urls.length > 0) {\n\t\t\t\tdata.set('text/uri-list', new vscode.DataTransferItem(urls.join('\\r\\n')));\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDrop(): void | Thenable<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: $h,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem>{\n\n\tprivate readonly a = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this.a.event;\n\n\tprivate readonly b: vscode.Disposable[] = [];\n\tprivate readonly c = new $g<boolean>('reference-list.hasHistory');\n\tprivate readonly d = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly e: $k) {\n\n\t\tthis.b.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => e.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\te.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis.f(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this.d.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis.f(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', async (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\tawait vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map(item => <HistoryPick>{\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: vscode.l10n.t('Select previous reference search') });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis.f(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this.b).dispose();\n\t\tthis.a.dispose();\n\t}\n\n\tprivate f(item: HistoryItem): void {\n\t\tthis.d.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis.e.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new $h(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis.d.delete(item.key);\n\t\tthis.d.set(item.key, item);\n\t\tthis.c.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis.d.clear();\n\t\tthis.c.set(false);\n\t\tthis.a.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this.d.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: vscode.l10n.t('Rerun') };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this.d.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { $k } from '../tree';\nimport { $g } from '../utils';\nimport { TypeHierarchyDirection, $u, $t } from './model';\n\nexport function $v(tree: $k, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichTypesDirection(context.workspaceState, TypeHierarchyDirection.Subtypes);\n\n\tfunction showTypeHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new $t(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setTypeHierarchyDirection(value: TypeHierarchyDirection, anchor: $u | vscode.Location | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: $t | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof $u) {\n\t\t\tnewInput = new $t(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (anchor instanceof vscode.Location) {\n\t\t\tnewInput = new $t(anchor, direction.value);\n\t\t} else if (oldInput instanceof $t) {\n\t\t\tnewInput = new $t(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showTypeHierarchy', showTypeHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showSupertypes', (item: $u | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Supertypes, item)),\n\t\tvscode.commands.registerCommand('references-view.showSubtypes', (item: $u | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Subtypes, item)),\n\t\tvscode.commands.registerCommand('references-view.removeTypeItem', removeTypeItem)\n\t);\n}\n\nfunction removeTypeItem(item: $u | unknown): void {\n\tif (item instanceof $u) {\n\t\titem.remove();\n\t}\n}\n\nclass RichTypesDirection {\n\n\tprivate static a = 'references-view.typeHierarchyMode';\n\n\tprivate b = new $g<TypeHierarchyDirection>('references-view.typeHierarchyMode');\n\n\tconstructor(\n\t\tprivate c: vscode.Memento,\n\t\tprivate d: TypeHierarchyDirection = TypeHierarchyDirection.Subtypes,\n\t) {\n\t\tconst raw = c.get<TypeHierarchyDirection>(RichTypesDirection.a);\n\t\tif (typeof raw === 'string') {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = d;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this.d;\n\t}\n\n\tset value(value: TypeHierarchyDirection) {\n\t\tthis.d = value;\n\t\tthis.b.set(value);\n\t\tthis.c.update(RichTypesDirection.a, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { $d, $b, $i, $c } from '../utils';\n\nexport class $t implements SymbolTreeInput<$u> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'typeHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: TypeHierarchyDirection,\n\t) {\n\t\tthis.title = direction === TypeHierarchyDirection.Supertypes\n\t\t\t? vscode.l10n.t('Supertypes Of')\n\t\t\t: vscode.l10n.t('Subtypes Of');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new TypesModel(this.direction, items ?? []);\n\t\tconst provider = new TypeItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): $t {\n\t\treturn new $t(location, this.direction);\n\t}\n}\n\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\n\nexport class $u {\n\n\tchildren?: $u[];\n\n\tconstructor(\n\t\treadonly model: TypesModel,\n\t\treadonly item: vscode.TypeHierarchyItem,\n\t\treadonly parent: $u | undefined,\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass TypesModel implements SymbolItemNavigation<$u>, SymbolItemEditorHighlights<$u>, SymbolItemDragAndDrop<$u> {\n\n\treadonly roots: $u[] = [];\n\n\tprivate readonly a = new vscode.EventEmitter<TypesModel>();\n\treadonly onDidChange = this.a.event;\n\n\tconstructor(readonly direction: TypeHierarchyDirection, items: vscode.TypeHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new $u(this, item, undefined));\n\t}\n\n\tprivate async b(currentType: $u): Promise<$u[]> {\n\t\tif (this.direction === TypeHierarchyDirection.Supertypes) {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', currentType.item);\n\t\t\treturn types ? types.map(item => new $u(this, item, currentType)) : [];\n\t\t} else {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', currentType.item);\n\t\t\treturn types ? types.map(item => new $u(this, item, currentType)) : [];\n\t\t}\n\t}\n\n\tasync getTypeChildren(item: $u): Promise<$u[]> {\n\t\tif (!item.children) {\n\t\t\titem.children = await this.b(item);\n\t\t}\n\t\treturn item.children;\n\t}\n\n\t// -- dnd\n\n\tgetDragUri(item: $u): vscode.Uri | undefined {\n\t\treturn $d(item.item.uri, item.item.range);\n\t}\n\n\t// -- navigation\n\n\tlocation(currentType: $u) {\n\t\treturn new vscode.Location(currentType.item.uri, currentType.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): $u | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: $u): $u {\n\t\treturn this.c(from, true) ?? from;\n\t}\n\n\tprevious(from: $u): $u {\n\t\treturn this.c(from, false) ?? from;\n\t}\n\n\tprivate c(item: $u, fwd: boolean): $u | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : $c(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(currentType: $u, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\treturn currentType.item.uri.toString() === uri.toString() ? [currentType.item.selectionRange] : undefined;\n\t}\n\n\tremove(item: $u) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\t$b(siblings, item);\n\t\t\tthis.a.fire(this);\n\t\t}\n\t}\n}\n\nclass TypeItemDataProvider implements vscode.TreeDataProvider<$u> {\n\n\tprivate readonly a = new vscode.EventEmitter<$u | undefined>();\n\treadonly onDidChangeTreeData = this.a.event;\n\n\tprivate readonly b: vscode.Disposable;\n\n\tconstructor(private c: TypesModel) {\n\t\tthis.b = c.onDidChange(e => this.a.fire(e instanceof $u ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t}\n\n\tgetTreeItem(element: $u): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'type-item';\n\t\titem.iconPath = $i(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Type'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: $u | undefined) {\n\t\treturn element\n\t\t\t? this.c.getTypeChildren(element)\n\t\t\t: this.c.roots;\n\t}\n\n\tgetParent(element: $u) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function $b<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function $c<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport function $d(uri: vscode.Uri, range: vscode.Range): vscode.Uri {\n\treturn uri.with({ fragment: `L${1 + range.start.line},${1 + range.start.character}-${1 + range.end.line},${1 + range.end.character}` });\n}\n\nexport async function $e(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function $f(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tconst previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tconst wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tconst inside = doc.getText(range);\n\tconst previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class $g<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class $h {\n\n\tprivate readonly a: number;\n\tprivate readonly b: string | undefined;\n\n\tconstructor(private readonly c: vscode.TextDocument, private readonly d: vscode.Position) {\n\t\tthis.a = c.version;\n\t\tthis.b = this.f(c, d);\n\t}\n\n\tprivate f(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this.b) {\n\t\t\treturn this.d;\n\t\t}\n\n\t\t// no changes\n\t\tif (this.a === this.c.version) {\n\t\t\treturn this.d;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this.f(this.c, this.d);\n\t\tif (this.b === wordNow) {\n\t\t\treturn this.d;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this.d.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this.c.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this.c.lineAt(line).text.indexOf(this.b);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this.c.lineAt(line).text.indexOf(this.b);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this.d;\n\t}\n}\n\n// vscode.SymbolKind.File === 0, Module === 1, etc...\nconst _themeIconIds = [\n\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n];\n\nexport function $i(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\tconst id = _themeIconIds[kind];\n\treturn id ? new vscode.ThemeIcon(id) : undefined;\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { $k } from './tree';\nimport * as types from './types';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new $k();\n\n\treferences.$s(tree, context);\n\tcalls.$n(tree, context);\n\ttypes.$v(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\tfunction getInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn tree.getInput();\n\t}\n\n\treturn { setInput, getInput };\n}\n"],"names":["removeCallItem","item","$m","remove","tree","context","direction","RichCallsDirection","workspaceState","setCallsDirection","value","anchor","newInput","oldInput","getInput","$l","vscode","Location","uri","selectionRange","start","location","setInput","subscriptions","push","commands","registerCommand","window","activeTextEditor","input","document","selection","active","constructor","c","d","b","$g","raw","get","a","this","set","update","contextValue","title","l10n","t","items","Promise","resolve","executeCommand","range","model","CallsModel","provider","CallItemDataProvider","roots","length","undefined","navigation","highlights","dnd","dispose","with","parent","locations","EventEmitter","onDidChange","event","map","call","calls","from","fromRanges","to","children","nearest","_position","find","toString","next","previous","fwd","$c","array","includes","idx","indexOf","getDragUri","$d","getEditorHighlights","filter","loc","siblings","$b","fire","onDidChangeTreeData","e","getTreeItem","element","TreeItem","name","openArgs","description","detail","tooltip","label","iconPath","$i","kind","end","firstLoctionStart","isBefore","Range","command","arguments","collapsibleState","TreeItemCollapsibleState","Collapsed","getChildren","getCallChildren","getParent","f","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","Set","workspace","onDidChangeTextDocument","add","onDidChangeActiveTextEditor","visible","onDidChangeVisibility","g","h","onDidChangeSelection","Disposable","editor","visibleTextEditors","setDecorations","viewColumn","has","ranges","delegate","Boolean","sel","preserveFocus","Selection","newItem","newLocation","reveal","select","focus","findLocations","$o","showReferencesDisposable","args","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","config","updateShowReferences","affectsConfiguration","getConfiguration","async","position","onDidChangeConfiguration","$r","file","$q","val","$p","asCopyText","env","clipboard","writeText","scheme","fsPath","resut","ReferencesTreeDataProvider","message","last","sort","targetUri","targetRange","fragment","references","aStr","bStr","aUri","bUri","aRange","bRange","isAfter","total","reduce","prev","cur","files","Position","ref","contains","lastBefore","best","bestValue","i","pos","charCodeAt","delta","_move","_item","result","ThemeIcon","File","doc","getDocument","before","inside","after","$f","None","asRelativePath","warmUpNext","openTextDocument","chunks","line","character","viewId","TreeInputHistory","TreeDataProviderDelegate","TreeDndDelegate","createTreeView","treeDataProvider","showCollapseAll","dragAndDropController","$j","j","$e","clearInput","newInputKind","Object","getPrototypeOf","modelPromise","then","expand","disposables","$a","reset","size","catch","err","console","error","Error","dropMimeTypes","dragMimeTypes","handleDrag","source","data","urls","DataTransferItem","join","handleDrop","HistoryItem","key","word","toLocaleLowerCase","Map","clear","Array","values","pop","guessedTrackedPosition","picks","pick","showQuickPick","placeHolder","delete","newPosition","isEqual","$h","getWordRangeAtPosition","getText","JSON","stringify","all","reverse","removeTypeItem","$u","RichTypesDirection","setTypeHierarchyDirection","$t","TypesModel","TypeItemDataProvider","currentType","types","getTypeChildren","splice","beforeLen","trim","previewStart","Math","max","wordRange","previewEnd","translate","replace","version","wordNow","startLine","checked","lineCount","ch","lineAt","text","_themeIconIds","id","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","$k","$s","$n","$v"],"sourceRoot":""}