{"version":3,"file":"xterm.js","mappings":"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MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/dom/WidthCache.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodePoint(oldCol++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","super","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","keyChar","test","push","refresh","buffer","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","position","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","existingReply","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","parentNode","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","isMac","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","setTimeout","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","d","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isInvisible","isCursorHidden","isFocused","isDim","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","cache","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","clearListeners","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","viewportEnd","viewportStart","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","precedingJoinState","ch","currentInfo","charProperties","extractWidth","shouldJoin","extractShouldJoin","oldWidth","stringFromCodePoint","addLineToLink","oldRow","oldCol","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","delta","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","joinState","idata","itext","codePointAt","tlength","copyWithin","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","_value","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","wcwidth","num","ucs","bisearch","preceding","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","extractCharKind","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","precedingInfo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}